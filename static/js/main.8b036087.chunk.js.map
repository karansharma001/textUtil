{"version":3,"sources":["textUtils/Navbar.js","textUtils/Textform.js","textUtils/About.js","textUtils/Alert.js","App_textUtil.js","index.js"],"names":["Navbar","props","useState","darkmodeText","setdarkmodeText","className","href","class","title","type","id","onClick","currentMode","color","setMode","backgroundColor","document","body","style","defaultProps","Textform","text","setText","for","heading","rows","value","onChange","event","console","log","target","placeholder","newText","toUpperCase","alertFun","toLowerCase","split","length","About","Alert","alert","role","msg","App_textUtil","setAlert","dark","setdark","setTimeout","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8b036087.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n  // Dark mode handler\r\n\r\n  let darkHandler = () => {\r\n    if (props.currentMode.color == \"black\") {\r\n      props.setMode({\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n      });\r\n\r\n      document.body.style.backgroundColor = \"black\";\r\n      document.body.style.color = \"white\";\r\n\r\n      setdarkmodeText(\"Light Mode\");\r\n    } else {\r\n      props.setMode({\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n      });\r\n\r\n      document.body.style.backgroundColor = \"white\";\r\n      document.body.style.color = \"black\";\r\n\r\n      setdarkmodeText(\"Dark Mode\");\r\n    }\r\n  };\r\n\r\n  // DarkMode text handler\r\n\r\n  const [darkmodeText, setdarkmodeText] = useState(\"Dark Mode\");\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark p-3\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand primary\" href=\"#\">\r\n            <span class=\"badge bg-secondary p-2\"> {props.title} </span>{\" \"}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" to='/'>Home</Link> */}\r\n                <a className=\"nav-link active\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n            <button\r\n              type=\"btn\"\r\n              class=\"btn d-flex btn-primary \"\r\n              onClick={darkHandler}\r\n            >\r\n              {darkmodeText}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n// Prop Types\r\n\r\nNavbar.propTypes = { title: PropTypes.string };\r\n// Here we are fixing that the title value in the prop should be a string but nothing else.\r\n// we can use Proptypes.string.isRequired if we don't want the prop value to be empty.\r\n\r\n// Default Props\r\nNavbar.defaultProps = {\r\n  title: \"Default\",\r\n};\r\n// here in the above code we are creating a default prop which will run if the prop value in not provided.\r\n","import React, { useState } from \"react\";\r\n\r\nconst Textform = (props) => {\r\n  const handelUpClick = () => {\r\n    // console.log(\"It works\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.alertFun(\"Noob coder just updated your text!\");\r\n  };\r\n\r\n  const handelLoClick = () => {\r\n    // console.log(\"It works\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.alertFun(\"Noob coder just updated your text!\");\r\n  };\r\n\r\n  const handelClear = () => {\r\n    // console.log(\"It works\");\r\n    setText(\"\");\r\n    props.alertFun(\"Noob coder just updated your text!\");\r\n  };\r\n\r\n  const handelCopy = () => {\r\n    // console.log(\"It works\");\r\n    let contText = document.getElementById(\"exampleFormControlTextarea1\");\r\n    contText.select();\r\n    navigator.clipboard.writeText(contText.value);\r\n    // alert(\"Text Copied\");\r\n  };\r\n\r\n  const handelOnChange = (event) => {\r\n    console.log(\"handel on change was clicked \");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n     \r\n\r\n      <div className=\"mb-3 my-5\" style={props.style}>\r\n        <div className=\"container text-center\">\r\n        <p>Hey! This is a simple text util app made with React. Here you can do some simple editings with your text. This app is just a practice project and it is still under development. Checkout all the features and especially the Dark mode. If you find any bug please report it to the developer. Karan Sharma ig. karan_sharma.02</p>\r\n          <label for=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n            <h2>{props.heading}</h2>\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={handelOnChange}\r\n            placeholder=\"Enter text here...\"\r\n            style={props.style}\r\n          ></textarea>\r\n\r\n          <div className=\"container text-center \">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handelUpClick}\r\n              className=\"btn btn-success my-3 mx-2 \"\r\n            >\r\n              Convert to upper text\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handelLoClick}\r\n              className=\"btn btn-warning my-3 mx-2\"\r\n            >\r\n              Convert to lower text\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handelClear}\r\n              className=\"btn btn-danger my-3 mx-2\"\r\n            >\r\n              Clear text\r\n            </button>\r\n\r\n            {/* Copy text btn  */}\r\n            {/* <button\r\n              type=\"button\"\r\n              onClick={handelCopy}\r\n               className=\"btn btn-info my-3 mx-2\"\r\n            >\r\n              Copy Text\r\n            </button> */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container my-4 text-center\">\r\n          <h3>Your text summary: </h3>\r\n          <p>\r\n            Your text has{\" \"}\r\n            <span className=\"badge bg-secondary\">\r\n              <b>{text.split(\" \").length}</b>\r\n            </span>{\" \"}\r\n            words and{\" \"}\r\n            <span className=\"badge bg-secondary\">\r\n              <b>{text.length}</b>\r\n            </span>{\" \"}\r\n            characters!\r\n          </p>\r\n          <p>\r\n            It would take around{\" \"}\r\n            <span className=\"badge bg-secondary\">\r\n              {\" \"}\r\n              <b>{0.008 * text.split(\" \").length}</b>\r\n            </span>{\" \"}\r\n            minutes if you read.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Textform;\r\n","import React, {useState} from \"react\";\r\n\r\nconst About = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-5 p-4 text-center\" style= {props.style}>\r\n        <h1 className=\"my-4\">Text Util App made with react</h1>\r\n\r\n        <p>\r\n        Hey! This is a simple text util app made with React. Here you can do some simple editings with your text. This app is just a practice project and it is still under development. Checkout all the features and especially the Dark mode. If you find any bug please report it to the developer. Karan Sharma ig. karan_sharma.02\r\n        </p>\r\n\r\n        <div className=\"accordion accordion-flush border my-5\"  id=\"accordionFlushExample\">\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"flush-headingOne\">\r\n              <button\r\n                className=\"accordion-button  collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#flush-collapseOne\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"flush-collapseOne\"\r\n                style= {props.style}\r\n              >\r\n               Demo\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"flush-collapseOne\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"flush-headingOne\"\r\n              data-bs-parent=\"#accordionFlushExample\"\r\n            >\r\n              <div className=\"accordion-body\" style= {props.style}> \r\n              Demo\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\r\n              <button\r\n                className=\"accordion-button  collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#flush-collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"flush-collapseTwo\"\r\n                style= {props.style}\r\n              >\r\n               Demo\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"flush-collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"flush-headingTwo\"\r\n              data-bs-parent=\"#accordionFlushExample\"\r\n            >\r\n              <div className=\"accordion-body\" style= {props.style}>\r\n              Demo\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"flush-headingThree\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#flush-collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"flush-collapseThree\"\r\n                style= {props.style}\r\n              >\r\n               Demo\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"flush-collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"flush-headingThree\"\r\n              data-bs-parent=\"#accordionFlushExample\"\r\n            >\r\n              <div className=\"accordion-body\" style= {props.style}>\r\n              Demo\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      \r\n\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About\r\n\r\n","import React from \"react\";\r\n\r\nconst Alert = (props) => {\r\n  return (\r\n    props.alert && <div className=\"alert text-center alert-warning alert-dismissible fade show\" role=\"alert\">\r\n      <strong>{props.alert.msg}</strong> \r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState } from \"react\";\r\nimport Navbar from \"./textUtils/Navbar\";\r\nimport Textform from \"./textUtils/Textform\";\r\nimport About from \"./textUtils/About\";\r\nimport Alert from \"./textUtils/Alert\";\r\n\r\n// import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\n\r\nconst App_textUtil = () => {\r\n  // Prop varibale to show alerts\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (msg) => {\r\n    setAlert({\r\n      msg: msg,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  };\r\n\r\n  // Prop varibale for Dark mode\r\n  const [dark, setdark] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* <Router>\r\n        <Navbar title=\"NoobCoder\" currentMode={dark} setMode={setdark} />\r\n        <Alert alert={alert} />\r\n        <Switch>\r\n          <Route exact path=\"/about\">\r\n            <About style={dark} />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Textform\r\n              heading=\"Enter the text to analyze\"\r\n              style={dark}\r\n              alertFun={showAlert}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </Router> */}\r\n\r\n      <Navbar title=\"NoobCoder\" currentMode={dark} setMode={setdark} />\r\n      <Alert alert={alert} />\r\n      <Textform\r\n        heading=\"Enter the text to analyze\"\r\n        style={dark}\r\n        alertFun={showAlert}\r\n      />\r\n      <About style={dark} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App_textUtil;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// Text Utils project \nimport App_textUtil from './App_textUtil'\n\n\nReactDOM.render(<App_textUtil/>, document.getElementById(\"root\")); \n"],"sourceRoot":""}